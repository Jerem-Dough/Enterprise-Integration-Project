{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\enterprise-integration-project\\\\enterprise-integration-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Widget from './Widget';\nimport SettingsMenu from './SettingsMenu'; // Import the SettingsMenu component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [widgets, setWidgets] = useState([{\n    id: 1,\n    title: \"Program 1\",\n    content: \"Fetching data...\"\n  }, {\n    id: 2,\n    title: \"Program 2\",\n    content: \"Fetching data...\"\n  }, {\n    id: 3,\n    title: \"Program 3\",\n    content: \"Fetching data...\"\n  }]);\n  const [settings, setSettings] = useState({\n    showTitle: true,\n    showContent: true\n  });\n  const updateWidgetContent = (id, newContent) => {\n    setWidgets(widgets.map(widget => widget.id === id ? {\n      ...widget,\n      content: newContent\n    } : widget));\n  };\n\n  // Handle settings changes\n  const handleSettingsChange = newSettings => {\n    setSettings(newSettings); // Update settings state\n  };\n  useEffect(() => {\n    // Fetch data and call updateWidgetContent (omitted for brevity)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(SettingsMenu, {\n      onSettingsChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"  \", widgets.map(widget => /*#__PURE__*/_jsxDEV(Widget, {\n      widget: widget,\n      settings: settings // Pass settings to the widget\n    }, widget.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gqLq0rxXgisSSvj6yfZ7RhM0VII=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Widget","SettingsMenu","jsxDEV","_jsxDEV","Dashboard","_s","widgets","setWidgets","id","title","content","settings","setSettings","showTitle","showContent","updateWidgetContent","newContent","map","widget","handleSettingsChange","newSettings","className","children","onSettingsChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/enterprise-integration-project/enterprise-integration-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Widget from './Widget';\r\nimport SettingsMenu from './SettingsMenu'; // Import the SettingsMenu component\r\n\r\nconst Dashboard = () => {\r\n  const [widgets, setWidgets] = useState([\r\n    { id: 1, title: \"Program 1\", content: \"Fetching data...\" },\r\n    { id: 2, title: \"Program 2\", content: \"Fetching data...\" },\r\n    { id: 3, title: \"Program 3\", content: \"Fetching data...\" }\r\n  ]);\r\n  \r\n  const [settings, setSettings] = useState({\r\n    showTitle: true,\r\n    showContent: true\r\n  });\r\n\r\n  const updateWidgetContent = (id, newContent) => {\r\n    setWidgets(widgets.map(widget => widget.id === id ? { ...widget, content: newContent } : widget));\r\n  };\r\n\r\n  // Handle settings changes\r\n  const handleSettingsChange = (newSettings) => {\r\n    setSettings(newSettings); // Update settings state\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data and call updateWidgetContent (omitted for brevity)\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <SettingsMenu onSettingsChange={handleSettingsChange} />  {/* Settings menu */}\r\n      {widgets.map(widget => (\r\n        <Widget\r\n          key={widget.id}\r\n          widget={widget}\r\n          settings={settings}  // Pass settings to the widget\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CACrC;IAAEU,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,CAC3D,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAGA,CAACP,EAAE,EAAEQ,UAAU,KAAK;IAC9CT,UAAU,CAACD,OAAO,CAACW,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACV,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGU,MAAM;MAAER,OAAO,EAAEM;IAAW,CAAC,GAAGE,MAAM,CAAC,CAAC;EACnG,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIC,WAAW,IAAK;IAC5CR,WAAW,CAACQ,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEI,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACF,YAAY;MAACsB,gBAAgB,EAAEJ;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,EACzDrB,OAAO,CAACW,GAAG,CAACC,MAAM,iBACjBf,OAAA,CAACH,MAAM;MAELkB,MAAM,EAAEA,MAAO;MACfP,QAAQ,EAAEA,QAAS,CAAE;IAAA,GAFhBO,MAAM,CAACV,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}