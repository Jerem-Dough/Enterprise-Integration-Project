{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\enterprise-integration-project\\\\enterprise-integration-frontend\\\\src\\\\components\\\\SettingsMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsMenu = ({\n  addProgram,\n  removeProgram,\n  toggleDarkMode,\n  changeAllDataTypes,\n  widgets\n}) => {\n  _s();\n  const [selectedProgram, setSelectedProgram] = useState(\"\");\n  const handleProgramRemove = e => {\n    const id = Number(e.target.value);\n    removeProgram(id);\n    setSelectedProgram(\"\"); // Reset the dropdown after removal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addProgram,\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedProgram,\n      onChange: e => handleProgramRemove(e),\n      defaultValue: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select Program to Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), widgets.map(widget => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: widget.id,\n        children: [\"Remove \", widget.title]\n      }, widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAllDataTypes('graph'),\n      children: \"Show Graph for All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAllDataTypes('pie'),\n      children: \"Show Pie Chart for All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeAllDataTypes('text'),\n      children: \"Show Text for All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"Dark Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsMenu, \"UpCmp7M9g7DOfcICkljijbIloRA=\");\n_c = SettingsMenu;\nexport default SettingsMenu;\nvar _c;\n$RefreshReg$(_c, \"SettingsMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SettingsMenu","addProgram","removeProgram","toggleDarkMode","changeAllDataTypes","widgets","_s","selectedProgram","setSelectedProgram","handleProgramRemove","e","id","Number","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","defaultValue","disabled","map","widget","title","type","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/enterprise-integration-project/enterprise-integration-frontend/src/components/SettingsMenu.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SettingsMenu = ({ addProgram, removeProgram, toggleDarkMode, changeAllDataTypes, widgets }) => {\r\n  const [selectedProgram, setSelectedProgram] = useState(\"\");\r\n\r\n  const handleProgramRemove = (e) => {\r\n    const id = Number(e.target.value);\r\n    removeProgram(id);\r\n    setSelectedProgram(\"\"); // Reset the dropdown after removal\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-menu\">\r\n      <h4>Settings</h4>\r\n      <button onClick={addProgram}>Add Program</button>\r\n      \r\n      {/* Dropdown to select which program to remove */}\r\n      <select value={selectedProgram} onChange={(e) => handleProgramRemove(e)} defaultValue=\"\">\r\n        <option value=\"\" disabled>Select Program to Remove</option>\r\n        {widgets.map(widget => (\r\n          <option key={widget.id} value={widget.id}>\r\n            Remove {widget.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      \r\n      <button onClick={() => changeAllDataTypes('graph')}>Show Graph for All</button>\r\n      <button onClick={() => changeAllDataTypes('pie')}>Show Pie Chart for All</button>\r\n      <button onClick={() => changeAllDataTypes('text')}>Show Text for All</button>\r\n      <br />\r\n      \r\n      {/* Dark mode toggle at the bottom */}\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={toggleDarkMode}\r\n        />\r\n        Dark Mode\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}