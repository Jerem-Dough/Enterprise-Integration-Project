{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\enterprise-integration-project\\\\enterprise-integration-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Widget from './Widget';\nimport SettingsMenu from './SettingsMenu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [widgets, setWidgets] = useState([{\n    id: 1,\n    title: \"Program 1\",\n    content: \"Fetching data...\",\n    type: \"text\"\n  }, {\n    id: 2,\n    title: \"Program 2\",\n    content: \"Fetching data...\",\n    type: \"text\"\n  }]);\n  const [settings, setSettings] = useState({\n    darkMode: false\n  });\n\n  // Add a new program\n  const addProgram = () => {\n    const newProgram = {\n      id: widgets.length + 1,\n      title: `Program ${widgets.length + 1}`,\n      content: \"Fetching data...\",\n      type: \"text\"\n    };\n    setWidgets([...widgets, newProgram]);\n  };\n\n  // Remove a program by id\n  const removeProgram = id => {\n    setWidgets(widgets.filter(widget => widget.id !== id));\n  };\n\n  // Toggle dark/light mode\n  const toggleDarkMode = () => {\n    setSettings(prevSettings => ({\n      ...prevSettings,\n      darkMode: !prevSettings.darkMode\n    }));\n  };\n\n  // Handle drag and drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const reorderedWidgets = Array.from(widgets);\n    const [removed] = reorderedWidgets.splice(source.index, 1);\n    reorderedWidgets.splice(destination.index, 0, removed);\n    setWidgets(reorderedWidgets);\n  };\n\n  // Change the data type of a program\n  const changeDataType = (id, type) => {\n    setWidgets(widgets.map(widget => widget.id === id ? {\n      ...widget,\n      type\n    } : widget));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard ${settings.darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(SettingsMenu, {\n      addProgram: addProgram,\n      removeProgram: removeProgram,\n      toggleDarkMode: toggleDarkMode,\n      changeDataType: changeDataType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"dashboard\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [widgets.map((widget, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `${widget.id}`,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(Widget, {\n                widget: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, widget.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"565MYVMp4yyUK2bSzQR3Jg7TPdg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Widget","SettingsMenu","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Dashboard","_s","widgets","setWidgets","id","title","content","type","settings","setSettings","darkMode","addProgram","newProgram","length","removeProgram","filter","widget","toggleDarkMode","prevSettings","onDragEnd","result","source","destination","reorderedWidgets","Array","from","removed","splice","index","changeDataType","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/enterprise-integration-project/enterprise-integration-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Widget from './Widget';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Dashboard = () => {\r\n  const [widgets, setWidgets] = useState([\r\n    { id: 1, title: \"Program 1\", content: \"Fetching data...\", type: \"text\" },\r\n    { id: 2, title: \"Program 2\", content: \"Fetching data...\", type: \"text\" }\r\n  ]);\r\n\r\n  const [settings, setSettings] = useState({\r\n    darkMode: false,\r\n  });\r\n\r\n  // Add a new program\r\n  const addProgram = () => {\r\n    const newProgram = {\r\n      id: widgets.length + 1,\r\n      title: `Program ${widgets.length + 1}`,\r\n      content: \"Fetching data...\",\r\n      type: \"text\"\r\n    };\r\n    setWidgets([...widgets, newProgram]);\r\n  };\r\n\r\n  // Remove a program by id\r\n  const removeProgram = (id) => {\r\n    setWidgets(widgets.filter(widget => widget.id !== id));\r\n  };\r\n\r\n  // Toggle dark/light mode\r\n  const toggleDarkMode = () => {\r\n    setSettings(prevSettings => ({\r\n      ...prevSettings,\r\n      darkMode: !prevSettings.darkMode,\r\n    }));\r\n  };\r\n\r\n  // Handle drag and drop\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const reorderedWidgets = Array.from(widgets);\r\n    const [removed] = reorderedWidgets.splice(source.index, 1);\r\n    reorderedWidgets.splice(destination.index, 0, removed);\r\n\r\n    setWidgets(reorderedWidgets);\r\n  };\r\n\r\n  // Change the data type of a program\r\n  const changeDataType = (id, type) => {\r\n    setWidgets(\r\n      widgets.map(widget => widget.id === id ? { ...widget, type } : widget)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard ${settings.darkMode ? 'dark-mode' : ''}`}>\r\n      <SettingsMenu \r\n        addProgram={addProgram} \r\n        removeProgram={removeProgram} \r\n        toggleDarkMode={toggleDarkMode}\r\n        changeDataType={changeDataType}\r\n      />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"dashboard\">\r\n          {(provided) => (\r\n            <div className=\"dashboard\" {...provided.droppableProps} ref={provided.innerRef}>\r\n              {widgets.map((widget, index) => (\r\n                <Draggable key={widget.id} draggableId={`${widget.id}`} index={index}>\r\n                  {(provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                      <Widget widget={widget} />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}