{"ast":null,"code":"var _jsxFileName = \"D:\\\\5 Downloads\\\\Skool\\\\Comp Sci\\\\Java\\\\enterprise-integration-project\\\\enterprise-integration-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Widget from './Widget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [widgets, setWidgets] = useState([{\n    id: 1,\n    title: \"Program 1\",\n    content: \"Fetching data...\"\n  }, {\n    id: 2,\n    title: \"Program 2\",\n    content: \"Fetching data...\"\n  }, {\n    id: 3,\n    title: \"Program 3\",\n    content: \"Fetching data...\"\n  }]);\n  const updateWidgetContent = (id, newContent) => {\n    setWidgets(widgets.map(widget => widget.id === id ? {\n      ...widget,\n      content: newContent\n    } : widget));\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch data for program1\n        const response1 = await fetch('http://localhost:3001/api/data/program1');\n        if (!response1.ok) throw new Error('Failed to fetch Program 1');\n        const result1 = await response1.json();\n        updateWidgetContent(1, result1.content);\n\n        // Fetch data for program2\n        const response2 = await fetch('http://localhost:3001/api/data/program2');\n        if (!response2.ok) throw new Error('Failed to fetch Program 2');\n        const result2 = await response2.json();\n        updateWidgetContent(2, result2.content);\n\n        // Fetch data for program3\n        const response3 = await fetch('http://localhost:3001/api/data/program3');\n        if (!response3.ok) throw new Error('Failed to fetch Program 3');\n        const result3 = await response3.json();\n        updateWidgetContent(3, result3.content);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData(); // Fetch data when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: widgets.map(widget => /*#__PURE__*/_jsxDEV(Widget, {\n      widget: widget\n    }, widget.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"lkBUPVnm2cTG8DJwwee4T5RXbZE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Widget","jsxDEV","_jsxDEV","Dashboard","_s","widgets","setWidgets","id","title","content","updateWidgetContent","newContent","map","widget","fetchData","response1","fetch","ok","Error","result1","json","response2","result2","response3","result3","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/5 Downloads/Skool/Comp Sci/Java/enterprise-integration-project/enterprise-integration-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Widget from './Widget';\r\n\r\nconst Dashboard = () => {\r\n  const [widgets, setWidgets] = useState([\r\n    { id: 1, title: \"Program 1\", content: \"Fetching data...\" },\r\n    { id: 2, title: \"Program 2\", content: \"Fetching data...\" },\r\n    { id: 3, title: \"Program 3\", content: \"Fetching data...\" }\r\n  ]);\r\n\r\n  const updateWidgetContent = (id, newContent) => {\r\n    setWidgets(widgets.map(widget => widget.id === id ? { ...widget, content: newContent } : widget));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch data for program1\r\n        const response1 = await fetch('http://localhost:3001/api/data/program1');\r\n        if (!response1.ok) throw new Error('Failed to fetch Program 1');\r\n        const result1 = await response1.json();\r\n        updateWidgetContent(1, result1.content);\r\n\r\n        // Fetch data for program2\r\n        const response2 = await fetch('http://localhost:3001/api/data/program2');\r\n        if (!response2.ok) throw new Error('Failed to fetch Program 2');\r\n        const result2 = await response2.json();\r\n        updateWidgetContent(2, result2.content);\r\n\r\n        // Fetch data for program3\r\n        const response3 = await fetch('http://localhost:3001/api/data/program3');\r\n        if (!response3.ok) throw new Error('Failed to fetch Program 3');\r\n        const result3 = await response3.json();\r\n        updateWidgetContent(3, result3.content);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();  // Fetch data when the component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {widgets.map(widget => (\r\n        <Widget key={widget.id} widget={widget} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CACrC;IAAES,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAmB,CAAC,CAC3D,CAAC;EAEF,MAAMC,mBAAmB,GAAGA,CAACH,EAAE,EAAEI,UAAU,KAAK;IAC9CL,UAAU,CAACD,OAAO,CAACO,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,MAAM;MAAEJ,OAAO,EAAEE;IAAW,CAAC,GAAGE,MAAM,CAAC,CAAC;EACnG,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACxE,IAAI,CAACD,SAAS,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC/D,MAAMC,OAAO,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,CAAC;QACtCV,mBAAmB,CAAC,CAAC,EAAES,OAAO,CAACV,OAAO,CAAC;;QAEvC;QACA,MAAMY,SAAS,GAAG,MAAML,KAAK,CAAC,yCAAyC,CAAC;QACxE,IAAI,CAACK,SAAS,CAACJ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC/D,MAAMI,OAAO,GAAG,MAAMD,SAAS,CAACD,IAAI,CAAC,CAAC;QACtCV,mBAAmB,CAAC,CAAC,EAAEY,OAAO,CAACb,OAAO,CAAC;;QAEvC;QACA,MAAMc,SAAS,GAAG,MAAMP,KAAK,CAAC,yCAAyC,CAAC;QACxE,IAAI,CAACO,SAAS,CAACN,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC/D,MAAMM,OAAO,GAAG,MAAMD,SAAS,CAACH,IAAI,CAAC,CAAC;QACtCV,mBAAmB,CAAC,CAAC,EAAEc,OAAO,CAACf,OAAO,CAAC;MAEzC,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDX,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBvB,OAAO,CAACO,GAAG,CAACC,MAAM,iBACjBX,OAAA,CAACF,MAAM;MAAiBa,MAAM,EAAEA;IAAO,GAA1BA,MAAM,CAACN,EAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}